/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package model;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maianhtran
 */
public class CustomerTableFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerTableFrame
     */
    //private JTable table;
    private DefaultTableModel model;

    public CustomerTableFrame(ArrayList<Customer> listCustomers) {
        initComponents();

        setTitle("Customer List");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       // setPreferredSize(new Dimension(400, 300));
       // setSize(455, 350);
        setLocationRelativeTo(null);

    
        getContentPane().add(scrollPane, BorderLayout.CENTER);

        for (Customer c : listCustomers) {
            Object[] rows = new Object[]{
                c.getCustomerID(), c.getCustomerName(), c.getPhoneNumber(), c.getAddress(), c.getEmail()
            };
            model.addRow(rows);
        }
        pack();
    }

    /*private void DeleteCustomer() {
        int row = CustomerTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Click a valid Customer", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to save?");
            if (confirm == JOptionPane.YES_OPTION) {
                String id = String.valueOf(CustomerTable.getValueAt(row, 1));
                manageCus.deleteCustomer(manageCus.findCustomer(id));

            }
           // refreshCusButton();
        }
    }*/

 /*private void  deleteCustomer(){
    int row = CustomerTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Click a valid Customer");
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to save?");
            if (confirm == JOptionPane.YES_OPTION) {
                String id = String.valueOf(customersListTable.getValueAt(row, 1));
                manageCus.deleteCus(manageCus.findCus(id));

            }
            refreshCusButton();
        }
        
    }*/

 /*public void keyReleased(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_DELETE) {
            int selectRow = table.getSelectedRow();
            if (selectRow != -1) {
                int option = JOptionPane.showConfirmDialog(CustomerTableFrame.this, "Do you want to detele this customer", "Delete Row", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    model.removeRow(selectRow);
                }
            }
        }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scrollPane = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Full name", "Phone number", "Address", "Email"
            }
        ));
        scrollPane.setViewportView(customerTable);

        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 280, 0, 307);
        jPanel1.add(cancelButton, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /*private void DeleteKeyListener() implements KeyListener {

        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
        }

        @Override
        public void keyReleased(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                int selectRow = table.getSelectedRow();
                if (selectRow != -1) {
                    int option = JOptionPane.showConfirmDialog(CustomerTableFrame.this, "Do you want to detele this customer", "Delete Row", JOptionPane.YES_NO_OPTION);
                    if (option == JOptionPane.YES_OPTION) {
                        model.removeRow(selectRow);
                    }
                }
            }
        }
    }*/
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTable customerTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables

}
